pub struct GameAssetMarketplace {
    pub assets_for_sale: Vec<u64>,
    pub prices: Vec<u64>,
}

impl GameAssetMarketplace {
    pub fn new() -> Self {
        GameAssetMarketplace {
            assets_for_sale: vec![],
            prices: vec![],
        }
    }

    pub fn list_asset(&mut self, asset_id: u64, price: u64) {
        self.assets_for_sale.push(asset_id);
        self.prices.push(price);
    }

    pub fn buy_asset(&mut self, asset_id: u64, buyer: &Pubkey) -> ProgramResult {
        let index = self.assets_for_sale.iter().position(|&id| id == asset_id);
        match index {
            Some(i) => {
                self.assets_for_sale.remove(i);
                self.prices.remove(i);
                msg!("Buyer {} purchased asset {}", buyer, asset_id);
                Ok(())
            }
            None => {
                msg!("Asset not found");
                Err(ProgramError::Custom(0))
            }
        }
    }
}
